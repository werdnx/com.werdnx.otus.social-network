version: '3.8'
networks:
  appnet:
    driver: bridge

services:
  db:
    build:
      context: .
      dockerfile: db/Dockerfile
    image: otus-social-db
    environment:
      POSTGRES_DB: socialdb
      POSTGRES_USER: socialuser
      POSTGRES_PASSWORD: socialpass
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/data:/data
    ports:
      - "5432:5432"
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: app
      RABBITMQ_DEFAULT_PASS: app
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - appnet
  app:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_MASTER_URL: jdbc:postgresql://db:5432/socialdb
      SPRING_DATASOURCE_MASTER_USERNAME: socialuser
      SPRING_DATASOURCE_MASTER_PASSWORD: socialpass
      SPRING_DATASOURCE_SLAVE_URL: jdbc:postgresql://db:5432/socialdb
      SPRING_DATASOURCE_SLAVE_USERNAME: socialuser
      SPRING_DATASOURCE_SLAVE_PASSWORD: socialpass
      SPRING_PROFILES_ACTIVE: single
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: app
      SPRING_RABBITMQ_PASSWORD: app
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8080:8080"
    networks:
      - appnet
volumes:
  pgdata:
